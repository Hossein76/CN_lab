<launch>
<include file="$(find gazebo_ros)/launch/empty_world.launch"/>
<!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="extra_gazebo_args" default=""/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="physics" default="ode"/>
  <arg name="verbose" default="true"/>
  <arg name="world_name" default="$(find jackal_gazebo)/worlds/jackal_race.world"/>
<!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
   <arg name="use_gui" default="false"/>
   <arg name="robotname" default="sos"/>

<param name="robot_description" command="$(find xacro)/xacro.py '$(find p2os_urdf)/defs/pioneer3at.xacro' prefix:=$(arg robotname)" />


  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" >
  <param name="publish_frequency" type="double" value="100.0" />
  <param name="tf_prefix" value="$(arg robotname)"/>
</node>
      <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher">
      <param name="use_gui" value="$(arg use_gui)" />
    </node>




      <node pkg="gazebo_ros" type="spawn_model" name="gazebo1"  args="-param robot_description -urdf -z 0.6 -model $(arg robotname)" />
      <!--node pkg="p2os_teleop" type="p2os_teleop" name="teleop1" /-->


 <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop1"  >
   <remap  from="/turtle1/cmd_vel" to="/cmd_vel" />
  </node>


       <!--node   pkg="gmapping"   type="slam_gmapping" name="mapping">
       <robotNamespace>/hi/</robotNamespace>

  <remap from="scan" to="base_scan" />
   <param name="map_update_interval" value="0.1" />
      <param name="delta" value="0.1 "/>
       <param name="particle" value="1" />
    <param name="iterations" value="30" />



  </node-->



        <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" >
        <param name="map_start_x" value="0.5"/>
        <param name="map_start_y" value="0.5" />
        <param name="map_size" value="2500"/>
        <param name="map_update_distance_thresh" value="0.01"/>
        <param name="map_update_angle_thresh" value="0.01" />
        <param name="laser_z_min_value" value="-1.0" />
        <param name="laser_z_max_value" value="1.0" />
        <param name="pub_map_odom_transform" value="true"/>
        <param name="pub_map_scanmatch_transform" value="false"/>
        <param name="map_frame" value="map" />
        <param name="base_frame" value="base_link"/>
        <param name="odom_frame" value="odom" />
        <remap from="scan" to="/base_scan" />
      </node>
           <node pkg="odom_and_tf" type="odom_and_tf_node" name="odomtf" output="screen" />
           <node pkg="odom_and_tf" type="image_node" name="image" output="screen" />

</launch>
